language: generic
matrix:
  include:
  - env: WITH_CMAKE=1 PYTHON=python COVERAGE=1
    addons: &nompi
      apt:
        packages: &aptnompi
        - gfortran
        - libblas-dev
        - liblapack-dev
  - env: WITH_PIP=1 PYTHON=python
    addons: *nompi
  - env: WITH_CMAKE=1 WITH_MPI4PY=1 PYTHON=python COVERAGE=1
    addons: &mpi
      apt:
        packages:
        - *aptnompi
        - mpi-default-dev
        - mpi-default-bin
  - env: WITH_PIP=1 WITH_MPI4PY=1 PYTHON=python
    addons: *mpi
  - os: osx
    env:
    - WITH_CMAKE=1 WITH_MPI4PY=1 PYTHON=python3
before_install:
- |
  if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
    rm -rf /usr/local/include/c++
    brew update
    brew upgrade python
    brew install gcc mpich
  fi
install:
- |
  if [[ "$WITH_CMAKE" ]]; then
    mkdir build
    pushd build
    if [[ "$COVERAGE" ]]; then
      cmake .. -DCMAKE_Fortran_FLAGS="-fprofile-arcs -ftest-coverage"
    else
      cmake ..
    fi
    make
    popd
    if [[ "$WITH_MPI4PY" ]]; then
      $PYTHON -m pip install --user -r requirements.txt
    else
      $PYTHON -m pip install --user -r <(grep -v mpi4py requirements.txt)
    fi
    $PYTHON setup.py build_ext -i
  fi
- |
  if [[ "$WITH_PIP" ]]; then
    $PYTHON -m pip install --user cffi numpy pytest
    [[ "$WITH_MPI4PY" ]] && $PYTHON -m pip install --user mpi4py
    $PYTHON -m pip install --user .
  fi
script:
- |
  if [[ "$WITH_CMAKE" ]]; then
    make -C build check
    $PYTHON -m pytest -v --durations=3
    if [[ "$COVERAGE" ]]; then
      cp build/CMakeFiles/mbd.dir/src/*.f90.gc?? src/
      bash <(curl -s https://codecov.io/bash) -F pytest
    fi
  fi
- |
  if [[ "$WITH_PIP" ]]; then
    cd
    $PYTHON -m pytest --pyargs pymbd -v --durations=3
  fi
notifications:
  pushover:
    api_key:
      secure: Z1rNy7duOeLxsmtuPVTf7Z/qySXVuKjxxNnQeDWiMCR151yHFXB8RMP9riv0z0yK+5q68FOfv9vcfnWXRws6g/lYZUjTcwWxH11gu3rzP9s0dGpmlNTmpr0/mbPQGWF13bJDSYE4HNPNmU9fGwD7YgXxexdHWROtY7nveKctpbl/ZC+vAPa/uSSVboyJsl4tUwcosGcROvo7G8ZveO6upLoSfpeEQXPRQ2rDMMILXz7PKAqhkm1wPytLeZMn3OLviQH+Y46PmK7wA/ZoO47k8iCzdQVpuGE+TPmo+4N5pKSdKXl1PfC7HlVvoltlKWeaTCjH8PXgViVcMNDA8qTwwc4gTepLAJoOlozxGIRs5i+ks+kHCM50dg4y3lneRKosDTAo2yPvxuGBkQ8/Vc98q5iTauTtAehKLf3rDoSfsRxYSiDgng3ajPJEebUwH3Gy3fUS8nWs4NOZ5aWGE8BtOCdfAxCg34A8IfYYPiZDfruTmv25UmDbXjzO2V+RNp+ekI5Gu8DDEf1yYdwSVqJYxHzF8CMd8CcsJdbwWJ0u5OwPkXNfAsyf0+k9j2ypT4iQ6S+gteGMPNRnWZtzDSe7agmgXzlT2UmltjV57QvKTRMjxNVZO6DOy+j1iX6TVZ63WIepPc3nfEphiiVKcbW5sSmx8iSloqUO014OwZGAMsA=
    users:
      secure: bPizpayT/DYyIXdJYlqPBEevcMCIgzikIyjeIF31oYszutC4KSsUCaLcywVYM3pKrotwlKZ4oThfFkBLg3lM6olc63/+BUI8/kIiiegFHrEiRZMG8nqRbharwhnYjnN/arEf3bziBKZIPLFs+bYQVkzwOF2DXg4sr13ggQymeoJYnDC8sAC23jzoBnsTJrXL4UpoB/08bgAbkUfqTb15hXsJ//aSPuJNMLmq6GOobUQLGn72ZAP6+LrVrgD+E+Tov7FRHon+6+GdUkNoZ8+zz1O9fEx8P4cpiDt0aFLr76O5/Zy1sjEM2o8zatLCMVYILEhLoIg5cVp0MsySEbitW39l+xMf1WOu7bPXb9b1xKLE4sKozlEhueBriE7EN6hE+pWWWS7mMNEe+qVOZWDk9vXhEIKHCU07scbBAMNy1bDysegLbQU1UT6qbHi3TP5HK7zsRRHnt0mA047/NA5CbJ/V+XO1wZVqZccgZCt1Ao22V88YZXvW9tQgSgXs1TBRdlK+a5jvM8JzvSn0DPs83PC3KwvBZysTtlzjHKt7Ccr13id3MpsmCFxD4hV7xxprKyFy/MzDCYpK7eRTGARdcKSLY26W8yJadJe64WqSN+JmAI6vuQLPHP3SKDc9GbozyW/Z6GeMF504KYa5ctDSE1PMHlfrIoUGSoY+/J1wLJs=
